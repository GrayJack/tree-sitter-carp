============================================
Def with identifiers
============================================

(def a b)

---

(source_file
  (def
    name: (identifier)
    value: (identifier)))

============================================
Def with literals
============================================

(def a true)

(def a false)

(def a 10)

(def a 10l)

(def a 10f)

(def a 10.0)

(def a 10.0f)

(def a \e)

(def a \\n)

(def a "str")

(def a "\n")

(def a #"pattern")

(def a #"\n")

---

(source_file
  (def
    name: (identifier)
    value: (bool_literal))
  (def
    name: (identifier)
    value: (bool_literal))
  (def
    name: (identifier)
    value: (integer_literal))
  (def
    name: (identifier)
    value: (integer_literal))
  (def
    name: (identifier)
    value: (float_literal))
  (def
    name: (identifier)
    value: (float_literal))
  (def
    name: (identifier)
    value: (float_literal))
  (def
    name: (identifier)
    value: (char_literal))
  (def
    name: (identifier)
    value: (char_literal
      (escape_sequence)))
  (def
    name: (identifier)
    value: (str_literal))
  (def
    name: (identifier)
    value: (str_literal
      (escape_sequence)))
  (def
    name: (identifier)
    value: (pattern_literal))
  (def
    name: (identifier)
    value: (pattern_literal
      (escape_sequence))))

============================================
Def with Array
============================================

(def arr [1 2 a])

(def ref-arr &[a b c])

(def arr [[1 2] [3 4]])

---

(source_file
  (def
    name: (identifier)
    value: (array_expression
      (integer_literal)
      (integer_literal)
      (identifier)))
  (def
    name: (identifier)
    value: (short_ref
      (array_expression
        (identifier)
        (identifier)
        (identifier))))
  (def
    name: (identifier)
    value: (array_expression
      (array_expression
        (integer_literal)
        (integer_literal))
      (array_expression
        (integer_literal)
        (integer_literal)))))

============================================
Def with Map
============================================

(def m {1 1.0 2 2.2})

---

(source_file
  (def
    name: (identifier)
    value: (map_expression
      key: (integer_literal)
      value: (float_literal)
      key: (integer_literal)
      value: (float_literal))))
