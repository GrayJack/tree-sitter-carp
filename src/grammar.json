{
  "name": "carp",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_s_expr"
      }
    },
    "_s_expr": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SYMBOL",
          "name": "_anything"
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": ")"
          }
        }
      ]
    },
    "_anything": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "def"
        }
      ]
    },
    "def": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "def"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "FIELD",
          "name": "value",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "SYMBOL",
                "name": "_literals"
              }
            ]
          }
        }
      ]
    },
    "_literals": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "integer_literal"
        },
        {
          "type": "SYMBOL",
          "name": "float_literal"
        },
        {
          "type": "SYMBOL",
          "name": "bool_literal"
        },
        {
          "type": "SYMBOL",
          "name": "str_literal"
        },
        {
          "type": "SYMBOL",
          "name": "pattern_literal"
        },
        {
          "type": "SYMBOL",
          "name": "char_literal"
        },
        {
          "type": "SYMBOL",
          "name": "negative_literal"
        }
      ]
    },
    "negative_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "integer_literal"
            },
            {
              "type": "SYMBOL",
              "name": "float_literal"
            }
          ]
        }
      ]
    },
    "integer_literal": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "PATTERN",
            "value": "[0-9][0-9_]*"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "l"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    },
    "float_literal": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "PATTERN",
            "value": "[0-9][0-9_]*"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "f"
              },
              {
                "type": "PATTERN",
                "value": ".[0-9][0-9_]*"
              },
              {
                "type": "PATTERN",
                "value": ".[0-9][0-9_]*f"
              }
            ]
          }
        ]
      }
    },
    "bool_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "str_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              },
              {
                "type": "PATTERN",
                "value": "."
              }
            ]
          }
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": "\""
          }
        }
      ]
    },
    "char_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\\"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "escape_sequence"
            },
            {
              "type": "PATTERN",
              "value": "."
            }
          ]
        }
      ]
    },
    "pattern_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              },
              {
                "type": "PATTERN",
                "value": "."
              }
            ]
          }
        },
        {
          "type": "IMMEDIATE_TOKEN",
          "content": {
            "type": "STRING",
            "value": "\""
          }
        }
      ]
    },
    "escape_sequence": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^xu]"
              },
              {
                "type": "PATTERN",
                "value": "u[0-9a-fA-F]{4}"
              },
              {
                "type": "PATTERN",
                "value": "u{[0-9a-fA-F]+}"
              },
              {
                "type": "PATTERN",
                "value": "x[0-9a-fA-F]{2}"
              }
            ]
          }
        ]
      }
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Zα-ωΑ-Ωµ_][a-zA-Zα-ωΑ-Ωµ\\d_]*"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

